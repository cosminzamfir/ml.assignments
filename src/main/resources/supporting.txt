Tune robot-moves.txt
==========================================================
Results for DecisionTreeTuner
==========================================================
pruning=false : errorRate = 2.7
pruning=true;confidenceFactor=0.05 : errorRate = 1.5
pruning=true;confidenceFactor=0.1 : errorRate = 1.5
pruning=true;confidenceFactor=0.15 : errorRate = 1.5
pruning=true;confidenceFactor=0.2 : errorRate = 1.5
pruning=true;confidenceFactor=0.25 : errorRate = 1.5
pruning=true;confidenceFactor=0.3 : errorRate = 1.5
pruning=true;confidenceFactor=0.35 : errorRate = 1.5
pruning=true;confidenceFactor=0.4 : errorRate = 1.5
pruning=true;confidenceFactor=0.45 : errorRate = 1.5
==========================================================
Best result for DecisionTreeTuner - pruning=true;confidenceFactor=0.05 - errorRate = 1.5
==========================================================
Results for BoostingTuner
==========================================================
baseLearner=decisionStump : errorRate = 28.8
baseLearner=J48;pruning=false : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.0 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.1 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.2 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.3 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.4 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.5 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.6 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.7 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.8 : errorRate = 1.1
baseLearner=J48;pruning=false;confidenceFactor=0.9 : errorRate = 1.1
==========================================================
Best result for BoostingTuner - baseLearner=J48;pruning=false - errorRate = 1.1
==========================================================
Results for NeuralNetTuner
==========================================================
hiddenUnits=5;momentum=0.0;learningRate=0.2 : errorRate = 23.7
hiddenUnits=5;momentum=0.0;learningRate=0.4 : errorRate = 24.5
hiddenUnits=5;momentum=0.0;learningRate=0.8 : errorRate = 26.4
hiddenUnits=5;momentum=0.3;learningRate=0.2 : errorRate = 23.5
hiddenUnits=5;momentum=0.3;learningRate=0.4 : errorRate = 22.1
hiddenUnits=5;momentum=0.3;learningRate=0.8 : errorRate = 31.5
hiddenUnits=5;momentum=0.6;learningRate=0.2 : errorRate = 24.9
hiddenUnits=5;momentum=0.6;learningRate=0.4 : errorRate = 27.5
hiddenUnits=5;momentum=0.6;learningRate=0.8 : errorRate = 28.8
hiddenUnits=7;momentum=0.0;learningRate=0.2 : errorRate = 29.2
hiddenUnits=7;momentum=0.0;learningRate=0.4 : errorRate = 22.5
hiddenUnits=7;momentum=0.0;learningRate=0.8 : errorRate = 23.7
hiddenUnits=7;momentum=0.3;learningRate=0.2 : errorRate = 30.6
hiddenUnits=7;momentum=0.3;learningRate=0.4 : errorRate = 23.9
hiddenUnits=7;momentum=0.3;learningRate=0.8 : errorRate = 23.8
hiddenUnits=7;momentum=0.6;learningRate=0.2 : errorRate = 21.7
hiddenUnits=7;momentum=0.6;learningRate=0.4 : errorRate = 24.1
hiddenUnits=7;momentum=0.6;learningRate=0.8 : errorRate = 26.0
hiddenUnits=9;momentum=0.0;learningRate=0.2 : errorRate = 20.8
hiddenUnits=9;momentum=0.0;learningRate=0.4 : errorRate = 25.9
hiddenUnits=9;momentum=0.0;learningRate=0.8 : errorRate = 25.8
hiddenUnits=9;momentum=0.3;learningRate=0.2 : errorRate = 22.5
hiddenUnits=9;momentum=0.3;learningRate=0.4 : errorRate = 22.5
hiddenUnits=9;momentum=0.3;learningRate=0.8 : errorRate = 25.4
hiddenUnits=9;momentum=0.6;learningRate=0.2 : errorRate = 21.7
hiddenUnits=9;momentum=0.6;learningRate=0.4 : errorRate = 21.8
hiddenUnits=9;momentum=0.6;learningRate=0.8 : errorRate = 22.9
hiddenUnits=11;momentum=0.0;learningRate=0.2 : errorRate = 21.9
hiddenUnits=11;momentum=0.0;learningRate=0.4 : errorRate = 22.0
hiddenUnits=11;momentum=0.0;learningRate=0.8 : errorRate = 25.8
hiddenUnits=11;momentum=0.3;learningRate=0.2 : errorRate = 21.2
hiddenUnits=11;momentum=0.3;learningRate=0.4 : errorRate = 21.4
hiddenUnits=11;momentum=0.3;learningRate=0.8 : errorRate = 22.8
hiddenUnits=11;momentum=0.6;learningRate=0.2 : errorRate = 25.4
hiddenUnits=11;momentum=0.6;learningRate=0.4 : errorRate = 23.5
hiddenUnits=11;momentum=0.6;learningRate=0.8 : errorRate = 26.4
hiddenUnits=13;momentum=0.0;learningRate=0.2 : errorRate = 23.2
hiddenUnits=13;momentum=0.0;learningRate=0.4 : errorRate = 21.2
hiddenUnits=13;momentum=0.0;learningRate=0.8 : errorRate = 22.2
hiddenUnits=13;momentum=0.3;learningRate=0.2 : errorRate = 20.8
hiddenUnits=13;momentum=0.3;learningRate=0.4 : errorRate = 21.3
hiddenUnits=13;momentum=0.3;learningRate=0.8 : errorRate = 25.4
hiddenUnits=13;momentum=0.6;learningRate=0.2 : errorRate = 21.2
hiddenUnits=13;momentum=0.6;learningRate=0.4 : errorRate = 21.7
hiddenUnits=13;momentum=0.6;learningRate=0.8 : errorRate = 23.5
hiddenUnits=15;momentum=0.0;learningRate=0.2 : errorRate = 22.1
hiddenUnits=15;momentum=0.0;learningRate=0.4 : errorRate = 22.1
hiddenUnits=15;momentum=0.0;learningRate=0.8 : errorRate = 23.8
hiddenUnits=15;momentum=0.3;learningRate=0.2 : errorRate = 18.9
hiddenUnits=15;momentum=0.3;learningRate=0.4 : errorRate = 24.8
hiddenUnits=15;momentum=0.3;learningRate=0.8 : errorRate = 26.4
hiddenUnits=15;momentum=0.6;learningRate=0.2 : errorRate = 22.7
hiddenUnits=15;momentum=0.6;learningRate=0.4 : errorRate = 24.6
hiddenUnits=15;momentum=0.6;learningRate=0.8 : errorRate = 28.0
hiddenUnits=17;momentum=0.0;learningRate=0.2 : errorRate = 18.9
hiddenUnits=17;momentum=0.0;learningRate=0.4 : errorRate = 25.2
hiddenUnits=17;momentum=0.0;learningRate=0.8 : errorRate = 23.4
hiddenUnits=17;momentum=0.3;learningRate=0.2 : errorRate = 23.8
hiddenUnits=17;momentum=0.3;learningRate=0.4 : errorRate = 27.2
hiddenUnits=17;momentum=0.3;learningRate=0.8 : errorRate = 22.3
hiddenUnits=17;momentum=0.6;learningRate=0.2 : errorRate = 21.5
hiddenUnits=17;momentum=0.6;learningRate=0.4 : errorRate = 24.8
hiddenUnits=17;momentum=0.6;learningRate=0.8 : errorRate = 27.0
hiddenUnits=19;momentum=0.0;learningRate=0.2 : errorRate = 21.5
hiddenUnits=19;momentum=0.0;learningRate=0.4 : errorRate = 25.0
hiddenUnits=19;momentum=0.0;learningRate=0.8 : errorRate = 23.2
hiddenUnits=19;momentum=0.3;learningRate=0.2 : errorRate = 18.6
hiddenUnits=19;momentum=0.3;learningRate=0.4 : errorRate = 22.4
hiddenUnits=19;momentum=0.3;learningRate=0.8 : errorRate = 24.1
hiddenUnits=19;momentum=0.6;learningRate=0.2 : errorRate = 25.7
hiddenUnits=19;momentum=0.6;learningRate=0.4 : errorRate = 23.9
hiddenUnits=19;momentum=0.6;learningRate=0.8 : errorRate = 26.0
hiddenUnits=21;momentum=0.0;learningRate=0.2 : errorRate = 22.0
hiddenUnits=21;momentum=0.0;learningRate=0.4 : errorRate = 23.2
hiddenUnits=21;momentum=0.0;learningRate=0.8 : errorRate = 24.3
hiddenUnits=21;momentum=0.3;learningRate=0.2 : errorRate = 18.9
hiddenUnits=21;momentum=0.3;learningRate=0.4 : errorRate = 22.4
hiddenUnits=21;momentum=0.3;learningRate=0.8 : errorRate = 25.0
hiddenUnits=21;momentum=0.6;learningRate=0.2 : errorRate = 20.5
hiddenUnits=21;momentum=0.6;learningRate=0.4 : errorRate = 22.5
hiddenUnits=21;momentum=0.6;learningRate=0.8 : errorRate = 25.1
hiddenUnits=23;momentum=0.0;learningRate=0.2 : errorRate = 24.5
hiddenUnits=23;momentum=0.0;learningRate=0.4 : errorRate = 21.5
hiddenUnits=23;momentum=0.0;learningRate=0.8 : errorRate = 22.8
hiddenUnits=23;momentum=0.3;learningRate=0.2 : errorRate = 22.0
hiddenUnits=23;momentum=0.3;learningRate=0.4 : errorRate = 24.1
hiddenUnits=23;momentum=0.3;learningRate=0.8 : errorRate = 26.2
hiddenUnits=23;momentum=0.6;learningRate=0.2 : errorRate = 22.8
hiddenUnits=23;momentum=0.6;learningRate=0.4 : errorRate = 25.2
hiddenUnits=23;momentum=0.6;learningRate=0.8 : errorRate = 25.8
hiddenUnits=25;momentum=0.0;learningRate=0.2 : errorRate = 23.0
hiddenUnits=25;momentum=0.0;learningRate=0.4 : errorRate = 23.4
hiddenUnits=25;momentum=0.0;learningRate=0.8 : errorRate = 22.8
hiddenUnits=25;momentum=0.3;learningRate=0.2 : errorRate = 22.1
hiddenUnits=25;momentum=0.3;learningRate=0.4 : errorRate = 23.7
hiddenUnits=25;momentum=0.3;learningRate=0.8 : errorRate = 25.4
hiddenUnits=25;momentum=0.6;learningRate=0.2 : errorRate = 23.6
hiddenUnits=25;momentum=0.6;learningRate=0.4 : errorRate = 24.7
hiddenUnits=25;momentum=0.6;learningRate=0.8 : errorRate = 25.7
==========================================================
Best result for NeuralNetTuner - hiddenUnits=19;momentum=0.3;learningRate=0.2 - errorRate = 18.6
==========================================================
Results for SMOTuner
==========================================================
Kernel=Liniar : errorRate = 35.7
Kernel=Quadratic : errorRate = 24.4
Kernel=Cubic : errorRate = 27.3
Kernel=Radial;gamma=0.04 : errorRate = 37.0
Kernel=Radial;gamma=0.33999999999999997 : errorRate = 26.4
Kernel=Radial;gamma=0.64 : errorRate = 25.9
Kernel=Radial;gamma=0.94 : errorRate = 25.7
Kernel=Radial;gamma=1.24 : errorRate = 25.9
==========================================================
Best result for SMOTuner - Kernel=Quadratic - errorRate = 24.4
==========================================================
Results for KNNTunner
==========================================================
k=1;DistanceWeight=None : errorRate = 33.3
k=1;DistanceWeight=Inverse : errorRate = 33.3
k=1;DistanceWeight=Similarity : errorRate = 33.3
k=2;DistanceWeight=None : errorRate = 37.0
k=2;DistanceWeight=Inverse : errorRate = 33.3
k=2;DistanceWeight=Similarity : errorRate = 33.3
k=4;DistanceWeight=None : errorRate = 35.1
k=4;DistanceWeight=Inverse : errorRate = 33.1
k=4;DistanceWeight=Similarity : errorRate = 33.2
k=6;DistanceWeight=None : errorRate = 34.4
k=6;DistanceWeight=Inverse : errorRate = 34.3
k=6;DistanceWeight=Similarity : errorRate = 34.9
k=8;DistanceWeight=None : errorRate = 34.5
k=8;DistanceWeight=Inverse : errorRate = 33.4
k=8;DistanceWeight=Similarity : errorRate = 33.1
k=10;DistanceWeight=None : errorRate = 35.0
k=10;DistanceWeight=Inverse : errorRate = 34.2
k=10;DistanceWeight=Similarity : errorRate = 34.2
k=20;DistanceWeight=None : errorRate = 34.3
k=20;DistanceWeight=Inverse : errorRate = 34.1
k=20;DistanceWeight=Similarity : errorRate = 34.2
==========================================================
Best result for KNNTunner - k=4;DistanceWeight=Inverse - errorRate = 33.1
==========================================================
Best configuration for each algorithm:
==========================================================
DecisionTreeTuner - pruning=true;confidenceFactor=0.05 - errorRate = 1.5
BoostingTuner - baseLearner=J48;pruning=false - errorRate = 1.1
NeuralNetTuner - hiddenUnits=19;momentum=0.3;learningRate=0.2 - errorRate = 18.6
SMOTuner - Kernel=Quadratic - errorRate = 24.4
KNNTunner - k=4;DistanceWeight=Inverse - errorRate = 33.1
==========================================================
